number_of_pieces = int(input())
pieces_dict_composer = {}
pieces_dict_key = {}

for n in range(number_of_pieces):
    data = input()
    piece, composer, key = data.split('|')
    pieces_dict_composer[piece] = composer
    pieces_dict_key[piece] = key

while True:
    command = input()
    if command == 'Stop':
        break
    data = command.split('|')
    if data[0] == "Add":
        piece = data[1]
        composer = data[2]
        key = data[3]
        if piece in pieces_dict_composer:
            print(f'{piece} is already in the collection!')
        else:
            pieces_dict_composer[piece] = composer
            pieces_dict_key[piece] = key
            print(f'{piece} by {composer} in {key} added to the collection!')
    elif data[0] == "Remove":
        piece = data[1]
        if piece in pieces_dict_composer:
            del pieces_dict_composer[piece]
            del pieces_dict_key[piece]
            print(f'Successfully removed {piece}!')
        else:
            print(f'Invalid operation! {piece} does not exist in the collection.')
    elif data[0] == 'ChangeKey':
        piece = data[1]
        new_key = data[2]
        if piece in pieces_dict_key:
            pieces_dict_key[piece] = new_key
            print(f'Changed the key of {piece} to {new_key}!')
        else:
            print(f'Invalid operation! {piece} does not exist in the collection.')

pieces_dict_composer_sorted = sorted(pieces_dict_composer.items(), key=lambda x: (x[0], x[1]))

for piece, composer in pieces_dict_composer_sorted:
    print(f'{piece} -> Composer: {composer}, Key: {pieces_dict_key[piece]}')
